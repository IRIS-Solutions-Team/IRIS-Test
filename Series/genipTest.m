
%% Test genip

return

%{
db = databank.fromFred([
    "CLVMNACSCAB1GQDE->ge_gdp"
    "CLVMEURSCAB1GQEU28->eu_gdp"
]);
databank.toCSV(db, "genipTest.csv", Inf);
%}

db = databank.fromCSV("genipTest.csv");
db.eu_gdp_yearly = convert(db.eu_gdp, Frequency.YEARLY, 'Method=', @sum);

startInterp = yy(2000);
endInterp = yy(2017);
numInterpYears = round(endInterp - startInterp + 1);
[db.eu_gdp_1, ~, info1] = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', roc(db.ge_gdp) ...
    , 'Range=', startInterp:endInterp ...
    , 'Aggregation=', @sum ...
);

meanRoc = (db.eu_gdp_yearly(endInterp)/db.eu_gdp_yearly(startInterp))^(1/(4*numInterpYears));
db.eu_gdp_2 = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', meanRoc ...
    , 'Range', startInterp:endInterp ...
    , 'Aggregation=', @sum ...
);

db.eu_gdp_3 = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', @auto ...
    , 'Range=', startInterp:endInterp ...
    , 'Aggregation=', @sum ...
);

stdScale = convert(db.eu_gdp_yearly, Frequency.QUARTERLY, 'Method=', 'QuadSum');
[db.eu_gdp_4, ~, info3] = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', roc(db.ge_gdp) ...
    , 'Range=', startInterp:endInterp ...
    , 'Aggregation=', @sum ...
    , 'StdScale=', stdScale ...
);

db.eu_gdp_roc = roc(db.eu_gdp);

[db.eu_gdp_5, bkf5, info5] = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', roc(db.ge_gdp) ...
    , 'Range=', startInterp:endInterp ...
    , 'Aggregation=', @sum ...
    , 'QuarterlyRate=', db.eu_gdp_roc{qq(2008,1:8)} ...
);

x1 = convert(db.eu_gdp_yearly, Frequency.QUARTERLY, Inf, 'Method=', 'quadsum');
x2 = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', @auto ...
    , 'Aggregation=', @sum ...
);
x3 = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', 1 ...
    , 'Aggregation=', @sum ...
);

x4 = genip( ...
    db.eu_gdp_yearly, Frequency.QUARTERLY, 'Rate', 1 ...
    , 'Aggregation=', @sum ...
    , 'QuarterlyLevel=', db.eu_gdp{qq(2008,1:8)} ...
);

