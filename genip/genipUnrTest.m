
testCase = matlab.unittest.FunctionTestCase.fromFunction(@(x)x);

db = databank.fromCSV( ...
    'genipUnrTest.csv' ...
    , 'DateFormat=', 'YYYYMmm' ...
    , 'SkipRows=', 1:5 ...
    , 'VariableNames=', {'ge_unr_sa', 'eu_unr', 'eu_unr_sa'} ...
);

db.ge_unr_sa_yearly = convert(db.ge_unr_sa, Frequency.YEARLY, 'Method=', @mean);
db.eu_unr_yearly = convert(db.eu_unr, Frequency.YEARLY, 'Method=', @mean);
db.eu_unr_sa_yearly = convert(db.eu_unr_sa, Frequency.YEARLY, 'Method=', @mean);

startInterp = yy(2010);
endInterp = yy(2019);
numInterpYears = round(endInterp - startInterp + 1);




%% Test Plain Level

[db.eu_unr1, info1] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'Level', @mean ...
    , 'Range=', startInterp:endInterp ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr1, Frequency.YEARLY, 'Method=', @mean), info1.LowRange) ...
    , getData(db.eu_unr_yearly, info1.LowRange) ...
    , 'RelTol', 1e-10 ...
);




%% Test Plain Diff

[db.eu_unr2, info2] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr2, Frequency.YEARLY, 'Method=', @mean), info2.LowRange) ...
    , getData(db.eu_unr_yearly, info2.LowRange) ...
    , 'RelTol', 1e-10 ...
);




%% Test Plain DiffDiff

[db.eu_unr3, info3] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'DiffDiff', @mean ...
    , 'Range=', startInterp:endInterp ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr3, Frequency.YEARLY, 'Method=', @mean), info3.LowRange) ...
    , getData(db.eu_unr_yearly, info3.LowRange) ...
    , 'RelTol', 1e-10 ...
);



%% Test Indicator Level and Transformed

[db.eu_unr4, info4] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Indicator.Level=', db.eu_unr_sa ...
    , 'Indicator.StdScale=', 1e-3 ...
);

[db.eu_unr5, info5] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Indicator.Diff=', diff(db.eu_unr_sa) ...
    , 'Indicator.StdScale=', 1e-3 ...
);

[db.eu_unr6, info6] = genip( ...
    db.eu_unr_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Indicator.Level=', db.eu_unr ...
    , 'Indicator.StdScale=', 1e-3 ...
);

[db.ge_unr7, info7] = genip( ...
    db.ge_unr_sa_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Indicator.Level=', db.eu_unr ...
    , 'Indicator.StdScale=', 1e-3 ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr4, 1, 'Method=', @mean), info4.LowRange) ...
    , getData(db.eu_unr_yearly, info4.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr6, 1, 'Method=', @mean), info6.LowRange) ...
    , getData(db.eu_unr_yearly, info6.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , getData(convert(db.ge_unr7, 1, 'Method=', @mean), info7.LowRange) ...
    , getData(db.ge_unr_sa_yearly, info6.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , getData(db.eu_unr4, info4.HighRange) ...
    , getData(db.eu_unr5, info5.HighRange) ...
)




%% Test Indicator and Conditioning Level

condDates = mm(2015, 1);
[db.eu_unr8, info8] = genip( ...
    db.eu_unr_sa_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Condition.Level=', clip(db.eu_unr_sa, condDates) ...
    , 'Indicator.Level=', db.ge_unr_sa ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr8, 1, 'Method=', @mean), info8.LowRange) ...
    , getData(db.eu_unr_sa_yearly, info8.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , db.eu_unr8(condDates), db.eu_unr_sa(condDates) ...
    , 'RelTol', 1e-10 ...
);




%% Test Indicator and Conditioning Diff

condDates = mm(2015, 1);
[db.eu_unr9, info9] = genip( ...
    db.eu_unr_sa_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Condition.Diff=', clip(diff(db.eu_unr_sa), condDates) ...
    , 'Indicator.Level=', db.ge_unr_sa ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr9, 1, 'Method=', @mean), info9.LowRange) ...
    , getData(db.eu_unr_sa_yearly, info9.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , getData(diff(db.eu_unr9), condDates), getData(diff(db.eu_unr_sa), condDates) ...
    , 'RelTol', 1e-8 ...
);





%% Test Indicator and Conditioning DiffDiff

diff2 = @(x)diff(diff(x));

condDates = mm(2015, 1);
[db.eu_unr10, info10] = genip( ...
    db.eu_unr_sa_yearly, Frequency.MONTHLY, 'Diff', @mean ...
    , 'Range=', startInterp:endInterp ...
    , 'Condition.DiffDiff=', clip(diff2(db.eu_unr_sa), condDates) ...
    , 'Indicator.Level=', db.ge_unr_sa ...
);

assertEqual(testCase ...
    , getData(convert(db.eu_unr10, 1, 'Method=', @mean), info10.LowRange) ...
    , getData(db.eu_unr_sa_yearly, info10.LowRange) ...
    , 'RelTol', 1e-10 ...
);

assertEqual(testCase ...
    , getData(diff2(db.eu_unr10), condDates), getData(diff2(db.eu_unr_sa), condDates) ...
    , 'RelTol', 1e-8 ...
);

